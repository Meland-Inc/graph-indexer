enum OrderStatus @entity {
	open
	sold
	cancelled
}

enum NFTStoreStatus @entity {
	open
	sold
	cancelled
}

enum ItemType @entity {
	undefined
	ticketland
	vipland
	placeable
}

enum LogAction @entity {
	transfer
	createorder
	cancelorder
	updateorder
	bought
}

# 购买日志
type BoughtLog @entity {
	id: ID!
	nft: NFT!
	priceInWei: BigInt!
}

type UpdateorderLog @entity {
	id: ID!
	order: Order!
}

type CancelorderLog @entity {
	id: ID!
	order: Order!
}

type CreateorderLog @entity {
	id: ID!
	order: Order!
}

type TransferLog @entity {
	id: ID!
	to: Web3IAccount!
	nft: NFT!
}

type Log @entity {
	id: ID!

	"""
	操作账号
	"""
	account: Web3IAccount!
	createdAt: BigInt!

	action: LogAction!
	
	transfer: TransferLog
	createorder: CreateorderLog
	cancelorder: CancelorderLog
	updateorder: UpdateorderLog
	bought: BoughtLog
}

type NFTSupport @entity {
	id: ID!
	nftAddress: Bytes!
}

type RcCoordinates @entity {
	id: ID!
	r: BigInt!
	c: BigInt!
}

type Vipland @entity {
	id: ID!
	imageURL: String!
	rcCoordinates: RcCoordinates
}

type Tikcetland @entity {
	id: ID!
	imageURL: String!
	rcCoordinates: RcCoordinates
}

# 放置类道具
type Placeable @entity {
	id: ID!
	rarity: String!
	imageURL: String!
}

type Web3IAccount @entity {
	id: ID! # ETH addr
	address: Bytes!
	imageURL: String!
	nfts: [NFT!] @derivedFrom(field: "owner")
}

type Metadata @entity {
	"""
	metadata id
	规则
	itemtype-自定义属性
	"""
	id: ID!
	itemType: ItemType!
	vipland: Vipland
	ticketland: Tikcetland
	placeable: Placeable
}


type SupplyQuantity @entity {
	id: ID!
	"""
	已经卖出数量
	"""
	soldCount: BigInt!
	"""
	最大供应量
	"""
	maxSupply: BigInt!
}

type Order @entity {
	id: ID!
	nft: NFT
	nftAddress: Bytes!
	blockNumber: BigInt!
"""
最大供应量
"""
	supplyQuantity: SupplyQuantity!

"""
商品源信息
"""
	metadata: Metadata!
"""
稀有度
"""
	rarity: String
"""
描述信息
"""
	tokenId: BigInt!
	txHash: Bytes!
"""
类别, 装备代号. 一个系列名
比如 ticket-land
"""
	symbol: String!
	name: String!

	owner: Web3IAccount!
"""
购买者
"""
	buyer: Bytes
"""
价格
"""
	price: BigInt!
	status: OrderStatus!
	expiresAt: BigInt!
	createdAt: BigInt!
	updatedAt: BigInt!
}

type NFTStoreItem @entity {
	id: ID!
	nftAddress: Bytes!
	txHash: Bytes!
	blockNumber: BigInt!
"""
供应量信息
"""
	supplyQuantity: SupplyQuantity!
"""
稀有度
"""
	rarity: String
"""
类别, 装备代号. 一个系列名
比如 ticket land
"""
	symbol: String!
	name: String!
"""
当前剩余库存
"""
	currentStockQuantity: BigInt!
	owner: Web3IAccount!
"""
价格,单位gwei. 18位数
1000000000000000000 gwei = 1 个
"""
	price: BigInt!
"""
商品源信息
"""
	metadata: Metadata!
"""
商品状态
"""
	status: NFTStoreStatus!
"""
上架时间
"""
	createdAt: BigInt!
	updatedAt: BigInt!

"""
限购数量
如果为0则表示不限购
"""
	limit: BigInt!
}

type NFT @entity {
	id: ID!
	tokenId: BigInt!
	contractAddress: Bytes!
"""
最大供应量
"""
	supplyQuantity: SupplyQuantity!
	metadata: Metadata!
"""
稀有度
"""
	rarity: String
	owner: Web3IAccount!
	# 类别, 装备代号. 一个系列名
	# 比如 ticket land
	symbol: String!
	name: String!
	tokenURI: String
	orders: [Order!] @derivedFrom(field: "nft") # History of all orders. Should only ever be ONE open order. all others must be cancelled or sold
	activeOrder: Order
	createdAt: BigInt!
	updatedAt: BigInt!
	soldAt: BigInt
}
